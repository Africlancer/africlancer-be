# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Profile {
  _id: String!
  userID: String!
  avatar: String
  hourlyRate: Float
  professionalHeadline: String
  summary: String
  recommendations: Float
  createdAt: String
  updatedAt: String
}

type User {
  _id: String
  firstName: String
  otherName: String
  lastName: String
  email: String
  username: String
  books: [String!]
}

type Project {
  _id: String
  title: String
  budget: Float
  summary: String
  details: String
  startDate: DateTime
  endDate: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Profile {
  _id: String!
  userID: String!
  avatar: String
  hourlyRate: Float
  professionalHeadline: String
  summary: String
  recommendations: Float
  createdAt: String
  updatedAt: String
}

type Query {
  findOneUser(query: UserQueryInput!): User!
  findUsers(query: UserQueryInput!): [User!]!
  deleteUser(_id: String!): Boolean!
  findOneProject(query: ProjectQueryInput!): Project!
  findProjects(query: ProjectQueryInput!): [Project!]!
  deleteProject(_id: String!): Boolean!
  findProfileByID(profileID: String!): Profile!
  findProfileByQuery(query: QueryProfileInput!): [Profile!]!
  deleteProfile(id: String!): Boolean!
}

input UserQueryInput {
  firstName: String
  otherName: String
  lastName: String
  email: String
  username: String
}

input ProjectQueryInput {
  title: String
  budget: Float
  summary: String
  details: String
  startDate: DateTime
  endDate: DateTime
}
input QueryProfileInput {
  _id: String
  userID: String
  avatar: String
  hourlyRate: Float
  professionalHeadline: String
  summary: String
  recommendations: Float
}

type Mutation {
  createUser(user: CreateUserInput!): User!
  updateUser(_id: String!, user: UpdateUserInput!): Boolean!
  createProject(project: CreateProjectInput!): Project!
  updateProject(_id: String!, project: UpdateProjectInput!): Boolean!
  createProfile(profile: CreateProfileInput!): Profile!
  updateProfile(profileID: String!, profile: QueryProfileInput!): Boolean!
}

input CreateUserInput {
  firstName: String!
  otherName: String
  lastName: String!
  email: String!
  username: String!
}

input UpdateUserInput {
  firstName: String
  otherName: String
  lastName: String
  email: String
  username: String
}

input CreateProjectInput {
  title: String
  budget: Float
  summary: String
  details: String
  startDate: DateTime
  endDate: DateTime
  _id: String
}

input UpdateProjectInput {
  title: String
  budget: Float
  summary: String
  details: String
  startDate: DateTime
  endDate: DateTime
}
input CreateProfileInput {
  userID: String!
  avatar: String
  hourlyRate: Float
  professionalHeadline: String
  summary: String
  recommendations: Float
  createdAt: String
  updatedAt: String
}